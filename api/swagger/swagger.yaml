swagger: 2.0
info:
  version: "0.0.1"
  title: Serenity Discussion API
# during dev, should point to your local machine
host: localhost
# basePath prefixes all resource paths 
basePath: /
# 
schemes:
  # tip: remove http to make production-grade
  - http
  - https
# format of bodies a client can send (Content-Type)
consumes:
  - application/json
# format of the responses to the client (Accepts)
produces:
  - application/json
x-volos-resources: {}
paths:
  /discussions:
    post:
      x-swagger-router-controller: discussions
      description: Create a new discusion
      # used as the method name of the controller
      operationId: create
      tags:
        - discussion
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: DiscussionBody
      responses:
        "200":
          description: Success
          schema:
            $ref: PostResponse
          examples:
            application/json: |-
              {
                  "id": 6,
                  "result": {
                    "success": true,
                    "status": 200
                  }
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "Parameter (body) is not a valid DiscussionBody model"
              }
  /discussions/{discussionId}:
    get:
      x-swagger-router-controller: discussions
      description: Get a discussion
      operationId: findById
      tags:
        - discussion
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Return a Discussion Resource
          schema:
            properties:
              success:
                type: boolean
              status:
                type: integer
                format: int32
              content:
                $ref: DiscussionResource
          examples:
            application/json: |-
              {
                  "success": true,
                  "status": 200,
                  "content": {
                    "discussionId": 4,
                    "remoteObjectId": 1,
                    "remoteObjectName": "Star Wars saga",
                    "createdBy": "_indy",
                    "updatedBy": "_indy",
                    "createdAt": "2014-10-07T23:25:45.168Z",
                    "updatedAt": "2014-10-07T23:25:45.168Z",
                    "messages": [{
                      "messageId": 8,
                      "discussionId": 4,
                      "parentMessageId": null,
                      "content": "Best saga ever",
                      "createdBy": "_indy",
                      "updatedBy": "_indy",
                      "createdAt": "2014-10-07T23:26:38.669Z",
                      "updatedAt": "2014-10-07T23:26:38.669Z"
                    }]
                  }
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "Parameter (discussionId) is not a valid int64 integer: a"
              }
  /discussions/{discussionId}/messages:
    post:
      x-swagger-router-controller: messages
      description: Create a Message
      operationId: create
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: MessageBody
      responses:
        "200":
          description: Success
          schema:
            $ref: PostResponse
          examples:
            application/json: |-
              {
                  "id": 9,
                  "result": {
                    "success": true,
                    "status": 200
                  }
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "Invalid content type (text/plain).  These are valid: application/json"
              }
    get:
      x-swagger-router-controller: messages
      description: Get all messages for a discussion
      operationId: getAllbyDiscussion
      tags:
        - discussion
        - messages
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Sucess
          schema:
            $ref: MessagesResponse
          examples:
            application/json: |-
              {
                  "messages": [{
                    "messageId": 8,
                    "discussionId": 4,
                    "parentMessageId": null,
                    "content": "Best saga ever",
                    "createdBy": "_indy",
                    "updatedBy": "_indy",
                    "createdAt": "2014-10-07T23:26:38.669Z",
                    "updatedAt": "2014-10-07T23:26:38.669Z",
                    "messages": []
                  },
                  {
                    "messageId": 9,
                    "discussionId": 4,
                    "parentMessageId": null,
                    "content": "My favorite is the first one - The Phantom Menace",
                    "createdBy": "_indy",
                    "updatedBy": "_indy",
                    "createdAt": "2014-10-08T00:05:36.211Z",
                    "updatedAt": "2014-10-08T00:12:01.367Z",
                    "messages": []
                  }]
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
  /discussions/{discussionId}/messages/{messageId}:
    get:
      x-swagger-router-controller: messages
      description: Get a Message and it's children
      operationId: findById
      tags:
        - discussion
        - messages
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: A successufly response
          schema:
            properties:
              success:
                type: boolean
                description: True or False if the request was a success
              status:
                type: integer
                description:  The HTTP status code
              content:
                $ref: MessageResource
          examples:
            application/json: |-
              {
                  "success": true,
                  "status": 200,
                  "content": {
                    "messageId": 9,
                    "discussionId": 4,
                    "parentMessageId": null,
                    "content": "My favorite is espisode 1 - The Phantom Menace",
                    "createdBy": "_indy",
                    "updatedBy": "_indy",
                    "createdAt": "2014-10-08T00:05:36.211Z",
                    "updatedAt": "2014-10-08T00:05:36.211Z",
                    "messages": []
                  }
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 404,
                  "message": "Cannot find the message with messageId 10 in the discussion 4"
              }
    put:
      x-swagger-router-controller: messages
      description: Update a message
      operationId: update
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: MessageBody
      responses:
        "200":
          description: Success
          schema:
            properties:
              success:
                type: boolean
                description: True or False if the request was a success
              status:
                type: integer
                description:  The HTTP status code
              content:
                $ref: MessageResource
          examples:
            application/json: |-
              {
                  "success": true,
                  "status": 200,
                  "content": {
                    "messageId": 9,
                    "discussionId": 4,
                    "parentMessageId": null,
                    "content": "My favorite is the first one - The Phantom Menace",
                    "createdBy": "_indy",
                    "updatedBy": "_indy",
                    "createdAt": "2014-10-08T00:05:36.211Z",
                    "updatedAt": "2014-10-08T00:12:01.367Z"
                  }
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "Invalid content type (text/plain).  These are valid: application/json"
              }
    delete:
      x-swagger-router-controller: messages
      description: Delete a messsage
      operationId: delete
      tags:
        - discussion
        - message
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
      responses:
        "200":
          description: Success
          schema:
            properties:
              success:
                type: boolean
                description: True or False if the request was a success
              status:
                type: integer
                description:  The HTTP status code
          examples:
            application/json: |-
              {
                  "success": true,
                  "status": 200
              }
        default:
          description: Error
          schema:
            $ref: ErrorResponse
          examples:
            application/json: |-
              {
                  "code": 400,
                  "message": "invalid json"
              }
  /discussions/{discussionId}/messages/{messageId}/messages:
    post:
      x-swagger-router-controller: messages
      description: Create a reply to a message.  The message ID path param will be used as the parent id for the message.
      operationId: reply
      tags:
        - discussion
        - message
        - reply
      parameters:
        - name: discussionId
          in: path
          description:  Id of discussion
          required: true
          type: integer
          format: int64
        - name: messageId
          in: path
          description:  Id of message
          required: true
          type: integer
          format: int64
        - name: body
          in: body
          required: true
          schema:
            $ref: MessageBody
      responses:
        "200":
          description: Sucessful reply
          schema:
            $ref: PostResponse
          examples:
            application/json: |-
              {
                  "id": 14,
                  "result": {
                    "success": true,
                    "status": 200
                  }
              }
# complex objects have schema definitions
definitions:
  MessagesResponse:
    required:
      - messages
    properties:
      messages:
        type: array
        items:
          $ref: MessageResource
          minItems: 0
          uniqueItems: true
  DiscussionResource:
    required:
      - discussionId
      - remoteObjectName
      - remoteObjectId
      - messages
    properties:
      discussionId:
        type: integer
        format: int64
      remoteObjectName:
        type: string
      remoteObjectId:
        type: integer
        format: int64
      messages:
        type: array
        items:
          $ref: MessageResource
          minItems: 0
          uniqueItems: true
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      createdBy:
        type: string
        description: The handle fo the user
      updatedBy:
        type: string
        description: The handle fo the user
  MessageResource:
    required:
      - messageId
      - discussionId
      - content
    properties:
      messageId:
        type: integer
        format: int64
      discussionId:
        type: integer
        format: int64
      content:
        type: string
      parentMessageId:
        description: The parent Message.  optional
        type: integer
        format: int64
      messages:
        description: The child messages
        type: array
        items:
          minItems: 0
          uniqueItems: true
          #$ref: MessageResource // we should cancel this annotation once this issue(https://github.com/wordnik/swagger-js/issues/137) solved.
      createdAt:
        type: string
        format: date-time
      updatedAt:
        type: string
        format: date-time
      createdBy:
        type: string
        description: The handle fo the user
      updatedBy:
        type: string
        description: The handle fo the user
  PostResponse:
    required:
      - id
    properties:
      id:
        type: integer
        format: int64
      result:
        properties:
          success:
            type: boolean
            description: Was the request a success
          status:
            type: integer
            format: int32
            description: The http status code
  DiscussionBody:
    required:
      - remoteObjectName
      - remoteObjectId
    properties:
      remoteObjectName:
        description: The type of object which a discussion is attached. for example challenge or submission
        type: string
      remoteObjectId:
        description: The id of the remote object
        type: integer
        format: int64
  MessageBody:
    required:
      - content
    properties:
      content:
        description:  The content of the message
        type: string
  ErrorResponse:
    required:
      - code
      - message
    properties:
      code:
        type: integer
        format: int32
        description: The http status code
      message:
        type: string